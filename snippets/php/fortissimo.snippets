# Fortissimo shortcuts
snippet fcommand
	<?php
	namespace ${1:MyApp}
	
	/**
	 * A Fortissimo command.
	 *
	 * Params:
	 * - name (type): description
	 */
	class `Filename()` extends \Fortissimo\Command\Base {
		public function expects() {
			return $this
				->description(${3})
				//->usesParam('name', 'description')
				//->withFilter('filtername')
				//->whichIsRequired()
				//->whichHasDefault()
				//->usesParam('name2', 'desc2')
				// ...
				->andReturns(${4})
			;
		}

		public function doesCommand() {
			//$name = $this->param('name', 'default);	

		}
	}
# In commands.
snippet Param
	$${1:name} = $this->param('${1:name}'${2:,});
snippet Context
	$this->context
snippet Logf
	$this->context->logf('${1:msg}', '${2:debug}')
snippet
snippet ->usesParam
	->usesParam('${1:name}', '${2:description}')
snippet ->whichIsRequired
	->whichIsRequired()
snippet ->whichHasDefault
	->whichHasDefault($0)
snippet ->withFilter
	->withFilter('${1:int}')
# For routes.
snippet ->route
	->route('${1:name}')
snippet ->usesGroup
	->usesGroup('${1:name}')
snippet ->using
	->using('${1:param}', ${2:NULL})
snippet ->from
	->from('${1:cxt}')
snippet ->does
	->does('${1:\Path}', '${2:name}')
snippet ->group
	->group('${1:name}')
snippet ->logger
	->logger('${1:name}')
		->does('${2:class}')
		->using($0)
